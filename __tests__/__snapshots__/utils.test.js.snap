// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.eslintrc.js mem-fs editor create 1`] = `
"module.exports = {
    env: {
        es6: true,
        jest: true
    },
    extends: [
        'omaha-prime-grade'
    ],
    parser: 'babel-eslint'
};"
`;

exports[`.eslintrc.js mem-fs editor delete 1`] = `
"module.exports = {
    env: {
        es6: true,
        jest: true
    },
    extends: [
        'omaha-prime-grade'
    ],
    parser: 'babel-eslint',
    key: {
        foo: 'foo',
        bar: 'bar'
    }
};"
`;

exports[`.eslintrc.js mem-fs editor extend 1`] = `
"/* eslint-disable no-unused-vars */
const {join} = require('path');
const {existsSync} = require('fs-extra');

module.exports = {
    env: {es6: true, jest: true},
    extends: ['omaha-prime-grade'],
    parser: 'babel-eslint'
};"
`;

exports[`.eslintrc.js mem-fs editor extend 2`] = `
"module.exports = {
    env: {
        es6: true,
        jest: true
    },
    extends: [
        'omaha-prime-grade'
    ],
    parser: 'babel-eslint',
    key: {
        foo: 'foo'
    }
};"
`;

exports[`.eslintrc.js mem-fs editor extend 3`] = `
"module.exports = {
    env: {
        es6: true,
        jest: true
    },
    extends: [
        'omaha-prime-grade'
    ],
    parser: 'babel-eslint',
    key: {
        foo: 'foo',
        bar: 'bar'
    }
};"
`;

exports[`.eslintrc.js mem-fs editor prepend 1`] = `
"const {existsSync} = require('fs-extra');

module.exports = {
    env: {
        es6: true,
        jest: true
    },
    extends: [
        'omaha-prime-grade'
    ],
    parser: 'babel-eslint',
    key: {
        foo: 'foo',
        bar: 'bar'
    }
};"
`;

exports[`.eslintrc.js mem-fs editor prepend 2`] = `
"const {join} = require('path');
const {existsSync} = require('fs-extra');

module.exports = {
    env: {
        es6: true,
        jest: true
    },
    extends: [
        'omaha-prime-grade'
    ],
    parser: 'babel-eslint',
    key: {
        foo: 'foo',
        bar: 'bar'
    }
};"
`;

exports[`.eslintrc.js mem-fs editor prepend 3`] = `
"const {join} = require('path');
const {existsSync} = require('fs-extra');

module.exports = {
    env: {
        es6: true,
        jest: true
    },
    extends: [
        'omaha-prime-grade'
    ],
    parser: 'babel-eslint',
    key: {
        foo: 'foo',
        bar: 'bar',
        baz: baz
    }
};"
`;

exports[`.eslintrc.js mem-fs editor read 1`] = `
"/* eslint-disable no-unused-vars */
const {join} = require('path');
const {existsSync} = require('fs-extra');

module.exports = {
    env: {es6: true, jest: true},
    extends: ['omaha-prime-grade'],
    parser: 'babel-eslint'
};"
`;

exports[`Makefile editor addComment 1`] = `
"# Makefile created with tomo
# Knowledge of the Holy One is understanding"
`;

exports[`Makefile editor addTask 1`] = `
"# Makefile created with tomo
foo: ## Foo task
	echo foo
bar: ## Bar task
	echo bar"
`;

exports[`Makefile editor append 1`] = `
"# Makefile created with tomo
test line"
`;

exports[`Makefile editor appendScripts (no bin variable) 1`] = `
"# Makefile created with tomo


test: ## Task description
	jest --coverage

lint: ## Task description
	eslint . -c ./.eslintrc.js

lint-watch: ## Task description
	echo Starting lint:watch
	watch 'make lint' src

build: ## Task description
	echo Starting build
	webpack
	echo Build complete
"
`;

exports[`Makefile editor appendScripts (with bin variable) 1`] = `
"# Makefile created with tomo
bin := home/user/project/__tests__/tomo-fixtures/node_modules/.bin/


dev: ## Task description
	stmux [ 'make build-watch' : 'make lint-watch' ]

test: ## Task description
	jest --coverage

test-watch: ## Task description
	jest --coverage --watchAll

lint: ## Task description
	$(bin)eslint . -c ./.eslintrc.js

lint-watch: ## Task description
	echo Starting lint:watch
	watch 'make lint' src

build: ## Task description
	echo Starting build
	$(bin)webpack
	echo Build complete

docs: ## Task description
	$(MAKE) lint-docs
	$(MAKE) build-docs
	$(MAKE) open-docs

deploy: ## Task description
	npm-run-all lint build test
"
`;

exports[`Makefile editor create 1`] = `"# Makefile created with tomo"`;

exports[`Makefile editor importScripts 1`] = `Object {}`;

exports[`Makefile editor importScripts 2`] = `
Object {
  "build": "webpack",
  "deploy": "npm-run-all lint build test",
  "dev": "stmux [ \\"npm run build:watch\\" : \\"npm run lint:watch\\" ]",
  "docs": "npm run build:docs",
  "lint": "eslint . -c ./.eslintrc.js",
  "lint:watch": "watch 'npm run lint' src",
  "postbuild": "echo Build complete",
  "postdocs": "npm run open:docs",
  "prebuild": "echo Starting build",
  "predocs": "npm run lint:docs",
  "prelint:watch": "echo Starting lint:watch",
  "test": "jest --coverage",
  "test:watch": "npm test -- --watchAll",
}
`;

exports[`createFunctionModuleEditor can create function ES module (defaults) 1`] = `
"export default () => ({
    foo: 'bar'
});"
`;

exports[`createFunctionModuleEditor can create function ES module with passed [] 1`] = `
"export default () => ({
    foo: 'bar'
});"
`;

exports[`createFunctionModuleEditor can create function ES module with passed parameters 1`] = `
"export default (foo, bar) => ({
    foo: 'bar'
});"
`;

exports[`createFunctionModuleEditor can create function module (defaults) 1`] = `
"module.exports = () => ({
    foo: 'bar'
});"
`;

exports[`createFunctionModuleEditor can create function module with passed [] 1`] = `
"module.exports = () => ({
    foo: 'bar'
});"
`;

exports[`createFunctionModuleEditor can create function module with passed parameters 1`] = `
"module.exports = (foo, bar) => ({
    foo: 'bar'
});"
`;

exports[`getVersions format response from npm (only allow valid version strings) 1`] = `
Array [
  "1.0.0",
  "2.0.0",
  "3.0.0",
]
`;

exports[`package.json mem-fs editor copy 1`] = `
Object {
  "author": "",
  "dependencies": Object {
    "chalk": "2.4.2",
    "delay": "4.2.0",
    "execa": "1.0.0",
  },
  "description": "",
  "devDependencies": Object {
    "@babel/cli": "^7.4.3",
    "@babel/core": "^7.4.3",
    "eslint": "^5.16.0",
    "webpack": "4.30.0",
  },
  "keywords": Array [],
  "license": "ISC",
  "main": "index.js",
  "name": "fixtures",
  "scripts": Object {
    "build": "webpack",
    "deploy": "npm-run-all lint build test",
    "dev": "stmux [ \\"npm run build:watch\\" : \\"npm run lint:watch\\" ]",
    "docs": "npm run build:docs",
    "lint": "eslint . -c ./.eslintrc.js",
    "lint:watch": "watch 'npm run lint' src",
    "postbuild": "echo Build complete",
    "postdocs": "npm run open:docs",
    "prebuild": "echo Starting build",
    "predocs": "npm run lint:docs",
    "prelint:watch": "echo Starting lint:watch",
    "test": "jest --coverage",
    "test:watch": "npm test -- --watchAll",
  },
  "version": "1.0.0",
}
`;

exports[`package.json mem-fs editor create 1`] = `
Object {
  "description": "A super cool app/server/tool/library/widget/thingy",
  "keywords": Array [],
  "license": "MIT",
  "name": "my-project",
  "version": "0.0.0",
}
`;

exports[`package.json mem-fs editor delete 1`] = `
Object {
  "description": "A super cool app/server/tool/library/widget/thingy",
  "keywords": Array [],
  "license": "MIT",
  "name": "my-project",
  "version": "0.0.0",
}
`;

exports[`package.json mem-fs editor extend 1`] = `
Object {
  "author": "",
  "dependencies": Object {
    "chalk": "2.4.2",
    "delay": "4.2.0",
    "execa": "1.0.0",
  },
  "description": "",
  "devDependencies": Object {
    "@babel/cli": "^7.4.3",
    "@babel/core": "^7.4.3",
    "eslint": "^5.16.0",
    "webpack": "4.30.0",
  },
  "keywords": Array [],
  "license": "ISC",
  "main": "index.js",
  "name": "fixtures",
  "scripts": Object {
    "build": "webpack",
    "deploy": "npm-run-all lint build test",
    "dev": "stmux [ \\"npm run build:watch\\" : \\"npm run lint:watch\\" ]",
    "docs": "npm run build:docs",
    "foo": "bar",
    "lint": "eslint . -c ./.eslintrc.js",
    "lint:watch": "watch 'npm run lint' src",
    "postbuild": "echo Build complete",
    "postdocs": "npm run open:docs",
    "prebuild": "echo Starting build",
    "predocs": "npm run lint:docs",
    "prelint:watch": "echo Starting lint:watch",
    "test": "jest --coverage",
    "test:watch": "npm test -- --watchAll",
  },
  "version": "1.0.0",
}
`;

exports[`package.json mem-fs editor read 1`] = `
Object {
  "author": "",
  "dependencies": Object {
    "chalk": "2.4.2",
    "delay": "4.2.0",
    "execa": "1.0.0",
  },
  "description": "",
  "devDependencies": Object {
    "@babel/cli": "^7.4.3",
    "@babel/core": "^7.4.3",
    "eslint": "^5.16.0",
    "webpack": "4.30.0",
  },
  "keywords": Array [],
  "license": "ISC",
  "main": "index.js",
  "name": "fixtures",
  "scripts": Object {
    "build": "webpack",
    "deploy": "npm-run-all lint build test",
    "dev": "stmux [ \\"npm run build:watch\\" : \\"npm run lint:watch\\" ]",
    "docs": "npm run build:docs",
    "lint": "eslint . -c ./.eslintrc.js",
    "lint:watch": "watch 'npm run lint' src",
    "postbuild": "echo Build complete",
    "postdocs": "npm run open:docs",
    "prebuild": "echo Starting build",
    "predocs": "npm run lint:docs",
    "prelint:watch": "echo Starting lint:watch",
    "test": "jest --coverage",
    "test:watch": "npm test -- --watchAll",
  },
  "version": "1.0.0",
}
`;

exports[`withOptions add custom options 1`] = `
Object {
  "a": 0,
  "b": 2,
  "c": 1,
}
`;
