"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.array.iterator"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.removeCypress=exports.addCypress=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_path=require("path"),_api=require("../../api");const ALWAYS=()=>!0,CYPRESS_DEPENDENCIES=["cypress","cypress-image-snapshot","cypress-match-screenshot"],addCypress=[{text:"Create Cypress config file",task:function(){var a=(0,_asyncToGenerator2.default)(function*({port:a}){const b=(0,_api.createJsonEditor)("cypress.json",{baseUrl:`http://localhost:${a}`,video:!1});yield new b().create().commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_api.allDoNotExist)("cypress.json")},{text:"Add Cypress test tasks to package.json",task:function(){var a=(0,_asyncToGenerator2.default)(function*(){yield new _api.PackageJsonEditor().extend({scripts:{"cy:open":"cypress open","cy:run":"cypress run","cy:update":"npm run cy:run -- --env updateSnapshots=true","test:visual":"npm-run-all --parallel start cy:open","test:visual:update":"del-cli ./cypress/snapshots","test:visual:ci":"npm-run-all --parallel start cy:run"}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)("package.json")},{text:"Add Cypress global variable to .eslintrc.js",task:function(){var a=(0,_asyncToGenerator2.default)(function*(){yield new _api.EslintConfigModuleEditor().extend({globals:{cy:!0}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)(".eslintrc.js")},{text:"Copy Cypress files",task:function(){var a=(0,_asyncToGenerator2.default)(function*({overwrite:a}){yield new _api.Scaffolder((0,_path.join)(__dirname,"templates")).overwrite(a).target("cypress/plugins").copy("plugins/index.js","index.js").target("cypress/support").copy("support/index.js","index.js").copy("support/commands.js","commands.js").target("cypress/integration").copy("visual-regression.test.js").commit()});return function task(){return a.apply(this,arguments)}}(),condition:ALWAYS},{text:"Install Cypress dependencies",task:({skipInstall:a})=>(0,_api.install)([...CYPRESS_DEPENDENCIES,"npm-run-all","del-cli"],{dev:!0,skipInstall:a}),condition:({isNotOffline:a,skipInstall:b})=>!b&&a&&(0,_api.allDoExist)("package.json")}];exports.addCypress=addCypress;const removeCypress=[{text:"Delete Cypress config file",task:function(){var a=(0,_asyncToGenerator2.default)(function*(){const a=(0,_api.createJsonEditor)("cypress.json");yield new a().delete().commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)("cypress.json")},{text:"Remove Cypress test tasks from package.json",task:function(){var a=(0,_asyncToGenerator2.default)(function*(){yield new _api.PackageJsonEditor().extend({scripts:{"cy:open":void 0,"cy:run":void 0,"cy:update":void 0,"test:visual":void 0,"test:visual:update":void 0,"test:visual:ci":void 0}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)("package.json")},{text:"Remove Cypress global variable from .eslintrc.js",task:function(){var a=(0,_asyncToGenerator2.default)(function*(){yield new _api.EslintConfigModuleEditor().extend({globals:{cy:!1}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)(".eslintrc.js")},{text:"Uninstall Cypress dependencies",task:()=>(0,_api.uninstall)(CYPRESS_DEPENDENCIES),condition:({skipInstall:a})=>!a&&(0,_api.allDoExist)("package.json")&&new _api.PackageJsonEditor().hasAll(...CYPRESS_DEPENDENCIES),optional:({skipInstall:a})=>!a}];exports.removeCypress=removeCypress;var _default=addCypress;exports.default=_default;