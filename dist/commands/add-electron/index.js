"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.tasks=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_path=require("path"),_api=require("../../api");const DEPENDENCIES=["electron","electron-context-menu","electron-debug","electron-is-dev"],DEV_DEPENDENCIES=["electron-reloader","npm-run-all","spectron"],ALWAYS=()=>!0,tasks=[{text:"Copy electron application files",task:function(){var _ref=(0,_asyncToGenerator2.default)(function*({overwrite}){yield new _api.Scaffolder((0,_path.join)(__dirname,"templates")).overwrite(overwrite).target(".").copy("index.js").target("bin").copy("preload.js").commit()});return function task(){return _ref.apply(this,arguments)}}(),condition:ALWAYS},{text:"Configure metadata and add tasks to package.json",task:function(){var _ref2=(0,_asyncToGenerator2.default)(function*({useParcel}){const scripts={"build:electron":"npm-run-all build:es build:css","prestart:electron":"npm run build:electron","start:electron":"electron index --enable-logging",dev:`npm-run-all --parallel watch:es${useParcel?"":" watch:css"} start:electron`};yield new _api.PackageJsonEditor().extend({description:"Native Desktop application built with Electron",main:"index.js",name:"tomo-native-app",scripts}).commit()});return function task(){return _ref2.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)("package.json")},{text:"Install electron dependencies",task:function(){var _ref3=(0,_asyncToGenerator2.default)(function*({skipInstall}){yield(0,_api.install)(DEPENDENCIES,{skipInstall}),yield(0,_api.install)(DEV_DEPENDENCIES,{dev:!0,skipInstall})});return function task(){return _ref3.apply(this,arguments)}}(),condition:({isNotOffline,skipInstall})=>!skipInstall&&isNotOffline&&(0,_api.allDoExist)("package.json")}];exports.tasks=tasks;var _default=tasks;exports.default=_default;