"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.array.iterator"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.addReact=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_path=require("path"),_api=require("../../api");const REACT_DEPENDENCIES=["prop-types","react","react-dom","wouter",// https://github.com/molefrog/wouter
"@hot-loader/react-dom"],DEV_DEPENDENCIES=["npm-run-all"],ALWAYS=()=>!0,addReact=[{text:"Copy React boilerplate and assets",task:function(){var a=(0,_asyncToGenerator2.default)(function*({assetsDirectory:a,sourceDirectory:b,overwrite:c,useParcel:d}){const e=d?"index-in-place-react.html":"index-react.html",f=d?"fonts-in-place.css":"fonts.css";yield new _api.Scaffolder((0,_path.join)(__dirname,"templates")).overwrite(c).target(b).copy("main.js").target(`${b}/components`).copy("App.js").copy("Header.js").copy("Body.js").copy("Footer.js").commit(),yield new _api.Scaffolder((0,_path.join)(__dirname,"..","common","templates")).overwrite(c).target(`${a}`).copy(e,"index.html").target(`${a}/css`).copy("style.css").copy(f,"fonts.css").target(`${a}/images`).copy("react.png").copy("preferences.png").target(`${a}/fonts`).copy("SansForgetica-Regular.eot").copy("SansForgetica-Regular.svg").copy("SansForgetica-Regular.ttf").copy("SansForgetica-Regular.woff").copy("SansForgetica-Regular.woff2").target(`${a}/library`).copy(".gitkeep").target(`${a}/workers`).copy(".gitkeep").commit()});return function task(){return a.apply(this,arguments)}}(),condition:ALWAYS},{text:"Set package.json \"main\" attribute and add scripts tasks",task:function(){var a=(0,_asyncToGenerator2.default)(function*({sourceDirectory:a,useParcel:b,useRollup:c}){const d={"watch:es":c?`watch 'npm run build:es' ${a}`:"webpack-dev-server --hot --open --mode development",start:"npm-run-all build:es --parallel watch:*"};yield new _api.PackageJsonEditor().extend({main:`${a}/main.js`}).extend(b?{}:{scripts:d}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)("package.json")},{text:"Install React dependencies",task:({skipInstall:a})=>(0,_api.install)([...REACT_DEPENDENCIES,...DEV_DEPENDENCIES],{skipInstall:a}),condition:({isNotOffline:a,skipInstall:b})=>!b&&a&&(0,_api.allDoExist)("package.json")}];exports.addReact=addReact;var _default=addReact;exports.default=_default;