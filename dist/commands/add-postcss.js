"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.array.iterator"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.removePostcss=exports.addPostcss=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_api=require("../api");const POSTCSS_DEPENDENCIES=["cssnano","postcss","postcss-cli","postcss-reporter","postcss-safe-parser","postcss-import","postcss-preset-env","stylelint","stylelint-config-recommended"],addPostcss=[{text:"Create PostCSS config file",task:function(){var _ref=(0,_asyncToGenerator2.default)(function*({useSnowpack}){yield new _api.PostcssConfigEditor().create().extend({plugins:[`require('stylelint')({config: {extends: 'stylelint-config-recommended'}})`,`require('postcss-import')()`,`require('postcss-preset-env')({stage: 0})`,`require('cssnano')()`,`require('postcss-reporter')({clearReportedMessages: true})`]}).extend(useSnowpack?{map:"false"}:{}).commit()});return function task(){return _ref.apply(this,arguments)}}(),condition:()=>(0,_api.allDoNotExist)("postcss.config.js")},{text:"Add PostCSS tasks to package.json",task:function(){var _ref2=(0,_asyncToGenerator2.default)(function*({assetsDirectory,outputDirectory}){yield new _api.PackageJsonEditor().extend({scripts:{"build:css":`postcss ${assetsDirectory}/css/style.css --dir ${outputDirectory}`,"watch:css":"npm run build:css -- --watch"}}).commit()});return function task(){return _ref2.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)("package.json")},{text:"Install PostCSS dependencies",task:({skipInstall})=>(0,_api.install)(POSTCSS_DEPENDENCIES,{dev:!0,skipInstall}),condition:({skipInstall})=>!skipInstall&&(0,_api.allDoExist)("package.json")}];/**
 * @type {task[]}
 * @see https://github.com/postcss/postcss
 */exports.addPostcss=addPostcss;const removePostcss=[{text:"Delete PostCSS config file",task:function(){var _ref3=(0,_asyncToGenerator2.default)(function*(){yield new _api.PostcssConfigEditor().delete().commit()});return function task(){return _ref3.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)("postcss.config.js")},{text:"Remove PostCSS build task from package.json",task:function(){var _ref4=(0,_asyncToGenerator2.default)(function*(){yield new _api.PackageJsonEditor().extend({scripts:{"build:css":void 0,"watch:css":void 0}}).commit()});return function task(){return _ref4.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)("package.json")},{text:"Uninstall PostCSS dependencies",task:()=>(0,_api.uninstall)(POSTCSS_DEPENDENCIES),condition:()=>(0,_api.allDoExist)("package.json")&&new _api.PackageJsonEditor().hasAll(...POSTCSS_DEPENDENCIES)}];exports.removePostcss=removePostcss;var _default=addPostcss;exports.default=_default;