"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.addJest=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_path=require("path"),_api=require("../../api");const ALWAYS=()=>!0,JEST_DEPENDENCIES=["jest","jest-watch-typeahead","babel-jest"],addJest=[{text:"Add test tasks and Jest configuration to package.json",task:function(){var a=(0,_asyncToGenerator2.default)(function*({browser:a}){const b={testMatch:["**/__tests__/**/*.(e2e|test).[jt]s?(x)"],setupFilesAfterEnv:a?["<rootDir>/__tests__/setup.js"]:void 0,watchPlugins:["jest-watch-typeahead/filename","jest-watch-typeahead/testname"]};yield new _api.PackageJsonEditor().extend({jest:b,scripts:{test:"jest .*.test.js --coverage","test:ing":"npm test -- --watchAll"}}).commit()});return function task(){return a.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)("package.json")},{text:"Copy Jest boilerplate",task:function(){var a=(0,_asyncToGenerator2.default)(function*({browser:a}){const b=new _api.Scaffolder((0,_path.join)(__dirname,"templates"));a&&(yield b.target("__tests__").copy("setup.js")),yield b.target("__tests__").copy("example.test.js").commit()});return function task(){return a.apply(this,arguments)}}(),condition:ALWAYS},{text:"Install Jest dependencies",task:({skipInstall:a})=>(0,_api.install)(JEST_DEPENDENCIES,{dev:!0,skipInstall:a}),condition:({isNotOffline:a,skipInstall:b})=>!b&&a&&(0,_api.allDoExist)("package.json")}];exports.addJest=addJest;var _default=addJest;exports.default=_default;