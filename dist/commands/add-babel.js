"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.array.iterator"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.addBabel=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_api=require("../api");const BABEL_CORE=["@babel/cli","@babel/core","@babel/runtime"],BABEL_PRESETS=["@babel/preset-env","babel-preset-minify"],BABEL_PLUGINS=["@babel/plugin-transform-runtime","@babel/plugin-proposal-class-properties","@babel/plugin-proposal-export-default-from","@babel/plugin-proposal-optional-chaining"],BABEL_REACT_PLUGINS=["react-hot-loader"],BABEL_REACT_PRESETS=["@babel/preset-react"],BABEL_DEPENDENCIES=[...BABEL_CORE,...BABEL_PRESETS,...BABEL_PLUGINS],addBabel=[{text:"Create Babel config file",task:function(){var _ref=(0,_asyncToGenerator2.default)(function*(){yield new _api.BabelConfigModuleEditor().create().commit()});return function task(){return _ref.apply(this,arguments)}}(),condition:()=>(0,_api.allDoNotExist)("babel.config.js",".babelrc",".babelrc.js")},{text:"Add React support to Babel configuration file",task:function(){var _ref2=(0,_asyncToGenerator2.default)(function*({useRollup}){const addQuotes=str=>`'${str}'`,maybeRename=name=>"react-hot-loader"===name?"react-hot-loader/babel":name,plugins=[...BABEL_REACT_PLUGINS,...BABEL_PLUGINS].filter(name=>!useRollup||"react-hot-loader"!==name).map(name=>{var _ref3,_name;return _ref3=(_name=name,maybeRename(_name)),addQuotes(_ref3)}),presets=[...BABEL_PRESETS,...BABEL_REACT_PRESETS].map(addQuotes);yield new _api.BabelConfigModuleEditor().extend({plugins,presets}).commit()});return function task(){return _ref2.apply(this,arguments)}}(),condition:({useReact})=>useReact&&(0,_api.allDoExist)("babel.config.js"),optional:({useReact})=>useReact},{text:"Add Babel build task to package.json",task:function(){var _ref4=(0,_asyncToGenerator2.default)(function*({outputDirectory,sourceDirectory}){yield new _api.PackageJsonEditor().extend({scripts:{"build:es":`babel ${sourceDirectory} --out-dir ${outputDirectory}`,"watch:es":`watch 'npm run build:es' ${sourceDirectory}`}}).commit()});return function task(){return _ref4.apply(this,arguments)}}(),condition:()=>(0,_api.allDoExist)("package.json")},{text:"Install Babel core, CLI, presets, and plugins",task:({skipInstall})=>(0,_api.install)(BABEL_DEPENDENCIES,{dev:!0,skipInstall}),condition:({isNotOffline,skipInstall})=>!skipInstall&&isNotOffline&&!new _api.PackageJsonEditor().hasAll(...BABEL_DEPENDENCIES)&&(0,_api.allDoExist)("package.json")// eslint-disable-line max-len
},{text:"Install Babel React presets and plugins",task:({skipInstall})=>(0,_api.install)([...BABEL_REACT_PRESETS,...BABEL_REACT_PLUGINS],{dev:!0,skipInstall}),condition:({isNotOffline,skipInstall,useReact})=>!skipInstall&&isNotOffline&&useReact&&(0,_api.allDoExist)("package.json"),optional:({useReact})=>useReact}];exports.addBabel=addBabel;var _default=addBabel;exports.default=_default;