"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.array.includes"),require("core-js/modules/es.array.iterator"),require("core-js/modules/es.object.entries"),require("core-js/modules/es.object.get-own-property-descriptors"),require("core-js/modules/es.string.split"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_is2=_interopRequireDefault(require("ramda/src/is")),_react=require("react"),_propTypes=_interopRequireDefault(require("prop-types")),_conf=_interopRequireDefault(require("conf")),_figures=require("figures"),_ink=require("ink"),_api=require("../api"),_jsxRuntime=require("react/jsx-runtime");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}const AnimatedIndicator=({complete,elapsed})=>{const Active=()=>/*#__PURE__*/(0,_jsxRuntime.jsxs)(_ink.Text,{color:"cyan",children:[_figures.play," "]}),Inactive=()=>/*#__PURE__*/(0,_jsxRuntime.jsxs)(_ink.Text,{dim:!0,children:[_figures.play," "]}),gate=+elapsed.split(":")[2]%3;return complete?/*#__PURE__*/(0,_jsxRuntime.jsx)(_ink.Text,{dim:!0,children:"runtime"}):/*#__PURE__*/(0,_jsxRuntime.jsxs)(_ink.Box,{children:[0===gate?/*#__PURE__*/(0,_jsxRuntime.jsx)(Active,{}):/*#__PURE__*/(0,_jsxRuntime.jsx)(Inactive,{}),1===gate?/*#__PURE__*/(0,_jsxRuntime.jsx)(Active,{}):/*#__PURE__*/(0,_jsxRuntime.jsx)(Inactive,{}),2===gate?/*#__PURE__*/(0,_jsxRuntime.jsx)(Active,{}):/*#__PURE__*/(0,_jsxRuntime.jsx)(Inactive,{})]})},Timer=({onComplete,options})=>{const{store}=options,[start]=process.hrtime(),[complete,setComplete]=(0,_react.useState)(!1),[elapsed,setElapsed]=(0,_react.useState)("00:00:00");// eslint-disable-line react-hooks/exhaustive-deps
return(0,_react.useEffect)(()=>{const id=setInterval(()=>{setElapsed((0,_api.getElapsedTime)(start))},1e3);// eslint-disable-line no-magic-numbers
global._tomo_tasklist_callback=()=>{"function"==typeof onComplete&&onComplete(store,start),setComplete(!0),clearInterval(id)}},[]),/*#__PURE__*/(0,_jsxRuntime.jsxs)(_ink.Box,{marginTop:1,marginLeft:1,children:[/*#__PURE__*/(0,_jsxRuntime.jsx)(AnimatedIndicator,{elapsed:elapsed,complete:complete}),/*#__PURE__*/(0,_jsxRuntime.jsxs)(_ink.Text,{children:[" ",elapsed]})]})};/**
 * Main tomo UI component
 * @param {Object} props Component props
 * @return {ReactComponent} Main tomo UI component
 */class UI extends _react.Component{constructor(props){super(props);const{commands,flags,input,namespace}=props,{ignoreWarnings}=flags,[command,...terms]=input,isCustom=command=>Object.entries(commands).filter(([,value])=>(0,_is2.default)(String)(value)).map(([name])=>name).includes(command),hasCommand=(0,_is2.default)(String)(command),isCustomCommand=isCustom(command),hasTerms=0<terms.length,{intendedCommand,intendedTerms}=isCustom(command)?{intendedCommand:command,intendedTerms:terms}:(0,_api.getIntendedInput)(commands,command,terms),showWarning=(command!==intendedCommand||hasTerms&&intendedTerms.map((term,index)=>term!==terms[index]).some(Boolean))&&!ignoreWarnings;this.store=new _conf.default({projectName:namespace}),this.state={hasTerms,hasCommand,showWarning,intendedTerms,intendedCommand,isCustomCommand},this.updateWarning=this.updateWarning.bind(this),this.updateTerms=this.updateTerms.bind(this)}render(){const self=this,{commands,descriptions,onComplete,flags,customCommands={},stdin}=self.props,{hasCommand,hasTerms,intendedCommand,intendedTerms,isCustomCommand,showWarning}=self.state,store=self.props.store||self.store,done=()=>"function"==typeof global._tomo_tasklist_callback&&global._tomo_tasklist_callback(),CustomCommand=()=>{const lookup=(0,_api.dict)(customCommands),Command=lookup.has(intendedCommand)?lookup.get(intendedCommand):_api.UnderConstruction;return/*#__PURE__*/(0,_jsxRuntime.jsx)(Command,{descriptions:descriptions,done:done,options:flags,stdin:stdin,store:store,terms:intendedTerms})};return/*#__PURE__*/(0,_jsxRuntime.jsx)(_api.ErrorBoundary,{children:showWarning?/*#__PURE__*/(0,_jsxRuntime.jsx)(_api.Warning,{callback:this.updateWarning,children:/*#__PURE__*/(0,_jsxRuntime.jsxs)(_ink.Text,{children:["Did you mean ",/*#__PURE__*/(0,_jsxRuntime.jsxs)(_ink.Text,{bold:!0,color:"green",children:[intendedCommand," ",intendedTerms.join(" ")]}),"?"]})}):hasCommand&&hasTerms?isCustomCommand?/*#__PURE__*/(0,_jsxRuntime.jsx)(CustomCommand,{stdin:stdin}):/*#__PURE__*/(0,_jsxRuntime.jsxs)(_react.Fragment,{children:[/*#__PURE__*/(0,_jsxRuntime.jsx)(Timer,{onComplete:onComplete,options:{store}}),/*#__PURE__*/(0,_jsxRuntime.jsx)(_api.TaskList,{commands:commands,command:intendedCommand,terms:intendedTerms,options:_objectSpread(_objectSpread({},flags),{},{store}),done:done})]}):hasCommand?isCustomCommand?/*#__PURE__*/(0,_jsxRuntime.jsx)(CustomCommand,{stdin:stdin}):/*#__PURE__*/(0,_jsxRuntime.jsx)(_api.SubCommandSelect,{command:intendedCommand,descriptions:descriptions,items:Object.keys(commands[intendedCommand]).map(command=>({label:command,value:command})),onSelect:this.updateTerms}):/*#__PURE__*/(0,_jsxRuntime.jsx)(_api.UnderConstruction,{})})}/**
     * Callback function for warning component
     * @param {string} data Character data from stdin
     * @return {undefined} Returns nothing
     */updateWarning(data){"\r"==data+""?this.setState({showWarning:!1}):process.exit(0)}/**
     * @param {Object} args Function options
     * @param {string} args.value Intended term
     * @return {undefined} Returns nothing
     */updateTerms({value}){this.setState({hasTerms:!0,intendedTerms:[value]})}}exports.default=UI,AnimatedIndicator.propTypes={complete:_propTypes.default.bool,elapsed:_propTypes.default.string},Timer.propTypes={onComplete:_propTypes.default.func,options:_propTypes.default.object},UI.propTypes={commands:_propTypes.default.object,descriptions:_propTypes.default.object,flags:_propTypes.default.object,input:_propTypes.default.array,namespace:_propTypes.default.string,stdin:_propTypes.default.string,store:_propTypes.default.oneOfType([_propTypes.default.array,_propTypes.default.object]),customCommands:_propTypes.default.object},UI.defaultProps={input:[],flags:{}};