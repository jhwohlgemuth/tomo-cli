"use strict";var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard"),_interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.array.iterator"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _is2=_interopRequireDefault(require("ramda/src/is")),_react=_interopRequireWildcard(require("react")),_propTypes=_interopRequireDefault(require("prop-types")),_ink=require("ink"),_api=require("./api"),_commands=_interopRequireDefault(require("./commands"));/**
 * Main tomo UI component
 * @param {Object} props Component props
 * @return {ReactComponent} Main tomo UI component
 */class UI extends _react.Component{constructor(a){super(a);const{flags:b,input:c}=a,{ignoreWarnings:d}=b,[e,...f]=c,g=(0,_is2.default)(String)(e),h=0<f.length,{intendedCommand:i,intendedTerms:j}=g?(0,_api.getIntendedInput)(_commands.default,e,f):{},k=(e!==i||h&&j.map((a,b)=>a!==f[b]).some(Boolean))&&!d;this.state={hasTerms:h,hasCommand:g,showWarning:k,intendedTerms:j,intendedCommand:i},this.updateWarning=this.updateWarning.bind(this),this.updateTerms=this.updateTerms.bind(this)}render(){const{done:a,descriptions:b,flags:c}=this.props,{hasCommand:d,hasTerms:e,intendedCommand:f,intendedTerms:g,showWarning:h}=this.state;return _react.default.createElement(_api.ErrorBoundary,null,h?_react.default.createElement(_api.Warning,{callback:this.updateWarning},_react.default.createElement(_ink.Text,null,"Did you mean ",_react.default.createElement(_ink.Color,{bold:!0,green:!0},f," ",g.join(" ")),"?")):d&&e?_react.default.createElement(_api.TaskList,{commands:_commands.default,command:f,terms:g,options:c,done:a}):d?_react.default.createElement(_api.SubCommandSelect,{command:f,descriptions:b,items:Object.keys(_commands.default[f]).map(a=>({label:a,value:a})),onSelect:this.updateTerms}):_react.default.createElement(_api.UnderConstruction,null))}/**
     * Callback function for warning component
     * @param {string} data Character data from stdin
     * @return {undefined} Returns nothing
     */updateWarning(a){"\r"==a+""?this.setState({showWarning:!1}):process.exit(0)}/**
     * @param {Object} args Function options
     * @param {string} args.value Intended term
     * @return {undefined} Returns nothing
     */updateTerms({value:a}){this.setState({hasTerms:!0,intendedTerms:[a]})}}exports.default=UI,UI.propTypes={input:_propTypes.default.array,flags:_propTypes.default.object,descriptions:_propTypes.default.object,done:_propTypes.default.func,stdin:_propTypes.default.string},UI.defaultProps={input:[],flags:{}};