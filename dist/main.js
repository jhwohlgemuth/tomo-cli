"use strict";var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard"),_interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.array.iterator"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _is2=_interopRequireDefault(require("ramda/src/is")),_react=_interopRequireWildcard(require("react")),_propTypes=_interopRequireDefault(require("prop-types")),_chalk=require("chalk"),_figures=_interopRequireDefault(require("figures")),_ink=require("ink"),_api=require("./api"),_commands=_interopRequireDefault(require("./commands"));const descriptions={project:`Scaffold a new Node.js project with ${_chalk.bold.yellow("Babel")}, ${(0,_chalk.bold)("ESLint")}, and ${_chalk.bold.magenta("Jest")}`,app:`Scaffold a new ${(0,_chalk.bold)("web application")} - basically a project with CSS, bundling, and stuff`,server:`Scaffold Node.js WebSocket, GraphQL, and HTTP(S) servers with an 80% solution for security "baked in"`,a11y:`Add automated ${(0,_chalk.bold)("accessibility")} testing`,babel:`Use next generation JavaScript, ${(0,_chalk.bold)("today!")}`,browsersync:`Time-saving ${(0,_chalk.bold)("synchronised browser")} testing (demo your app with ${_chalk.bold.yellow("live-reload")})`,cypress:`${(0,_chalk.bold)("Test")} anything that runs in a ${(0,_chalk.bold)("browser")} (including ${_chalk.bold.yellow("visual regression testing")})`,electron:`Create a ${(0,_chalk.bold)("native desktop application")} using web technologies`,esdoc:`Generate ${(0,_chalk.bold)("documentation")} from your comments`,eslint:`Pluggable ${(0,_chalk.bold)("linting")} utility for JavaScript and JSX`,jest:`Delightful JavaScript ${(0,_chalk.bold)("Testing")} Framework with a focus on simplicity`,makefile:`Create a ${(0,_chalk.bold)("Makefile")} from your package.json, like ${_chalk.bold.magenta("magic!")}`,marionette:`${(0,_chalk.bold)("Flexible Backbone framework")} with robust views and architecture solutions`,parcel:`${(0,_chalk.bold)("Bundle")} your application (${_chalk.bold.red("blazing")} fast with ${_chalk.bold.white("zero configuration")})`,postcss:`Use ${(0,_chalk.bold)("future CSS")}, never write vendor prefixes again, and much much more!`,react:`Build user interfaces with ${(0,_chalk.bold)("components")} ${_figures.default.arrowRight} learn once, write ${(0,_chalk.bold)("anywhere")}`,reason:`Write functional ${(0,_chalk.bold)("type safe")} code with ${_chalk.bold.yellow("JavaScript")}-like syntax (works with ${(0,_chalk.bold)("React")})`,rollup:`${(0,_chalk.bold)("Bundle")} your assets (focused on ${(0,_chalk.bold)("ES6")} modules and tree shaking - ${_chalk.bold.white("best for libraries")})`,webpack:`${(0,_chalk.bold)("Bundle")} your assets (with great support and a rich ecosystem)`};/**
 * Main tomo UI component
 * @param {Object} props Component props
 * @return {ReactComponent} Main tomo UI component
 */class UI extends _react.Component{constructor(a){super(a);const{flags:b,input:c}=a,{ignoreWarnings:d}=b,[e,...f]=c,g=(0,_is2.default)(String)(e),h=0<f.length,{intendedCommand:i,intendedTerms:j}=g?(0,_api.getIntendedInput)(_commands.default,e,f):{},k=(e!==i||h&&j.map((a,b)=>a!==f[b]).some(Boolean))&&!d;this.state={hasTerms:h,hasCommand:g,showWarning:k,intendedTerms:j,intendedCommand:i},this.updateWarning=this.updateWarning.bind(this),this.updateTerms=this.updateTerms.bind(this)}render(){const{done:a,flags:b}=this.props,{hasCommand:c,hasTerms:d,intendedCommand:e,intendedTerms:f,showWarning:g}=this.state;return _react.default.createElement(_api.ErrorBoundary,null,g?_react.default.createElement(_api.Warning,{callback:this.updateWarning},_react.default.createElement(_ink.Text,null,"Did you mean ",_react.default.createElement(_ink.Color,{bold:!0,green:!0},e," ",f.join(" ")),"?")):c&&d?_react.default.createElement(_api.TaskList,{commands:_commands.default,command:e,terms:f,options:b,done:a}):c?_react.default.createElement(_api.SubCommandSelect,{command:e,descriptions:descriptions,items:Object.keys(_commands.default[e]).map(a=>({label:a,value:a})),onSelect:this.updateTerms}):_react.default.createElement(_api.UnderConstruction,null))}/**
     * Callback function for warning component
     * @param {string} data Character data from stdin
     * @return {undefined} Returns nothing
     */updateWarning(a){"\r"==a+""?this.setState({showWarning:!1}):process.exit(0)}/**
     * @param {Object} args Function options
     * @param {string} args.value Intended term
     * @return {undefined} Returns nothing
     */updateTerms({value:a}){this.setState({hasTerms:!0,intendedTerms:[a]})}}exports.default=UI,UI.propTypes={input:_propTypes.default.array,flags:_propTypes.default.object,done:_propTypes.default.func,stdin:_propTypes.default.string},UI.defaultProps={input:[],flags:{}};